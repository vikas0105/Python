import requests
import httpx
import asyncio

# ------------------ 1Ô∏è‚É£ Basic GET Request ------------------
def get_request():
    url = "https://api.github.com"
    response = requests.get(url)
    print(f"‚úÖ GET Response: {response.json()}")

# ------------------ 2Ô∏è‚É£ Basic POST Request ------------------
def post_request():
    url = "https://jsonplaceholder.typicode.com/posts"
    data = {"title": "DevOps API", "body": "This is a test post.", "userId": 1}
    
    response = requests.post(url, json=data)
    print(f"‚úÖ POST Response: {response.json()}")

# ------------------ 3Ô∏è‚É£ Async GET Request ------------------
async def async_get():
    async with httpx.AsyncClient() as client:
        response = await client.get("https://api.github.com")
        print(f"‚úÖ Async GET Response: {response.json()}")

# ------------------ 4Ô∏è‚É£ Trigger a Jenkins Job ------------------
def trigger_jenkins():
    jenkins_url = "http://jenkins.example.com/job/{job_name}/build"
    headers = {"Authorization": "Bearer YOUR_JENKINS_TOKEN"}

    response = requests.post(jenkins_url, headers=headers)
    if response.status_code == 201:
        print("‚úÖ Jenkins Job Triggered!")
    else:
        print(f"‚ùå Jenkins API Error: {response.status_code}")

# ------------------ EXECUTE ALL FUNCTIONS ------------------
if __name__ == "__main__":
    get_request()
    post_request()
    asyncio.run(async_get())
    trigger_jenkins()


Here‚Äôs a simple and clean all-in-one Python snippet covering GET, POST, async API calls, and triggering Jenkins. üöÄ

üî• DevOps API Interaction Script (One Snippet)
python
Copy
Edit
import requests
import httpx
import asyncio

# ------------------ 1Ô∏è‚É£ Basic GET Request ------------------
def get_request():
    url = "https://api.github.com"
    response = requests.get(url)
    print(f"‚úÖ GET Response: {response.json()}")

# ------------------ 2Ô∏è‚É£ Basic POST Request ------------------
def post_request():
    url = "https://jsonplaceholder.typicode.com/posts"
    data = {"title": "DevOps API", "body": "This is a test post.", "userId": 1}
    
    response = requests.post(url, json=data)
    print(f"‚úÖ POST Response: {response.json()}")

# ------------------ 3Ô∏è‚É£ Async GET Request ------------------
async def async_get():
    async with httpx.AsyncClient() as client:
        response = await client.get("https://api.github.com")
        print(f"‚úÖ Async GET Response: {response.json()}")

# ------------------ 4Ô∏è‚É£ Trigger a Jenkins Job ------------------
def trigger_jenkins():
    jenkins_url = "http://jenkins.example.com/job/{job_name}/build"
    headers = {"Authorization": "Bearer YOUR_JENKINS_TOKEN"}

    response = requests.post(jenkins_url, headers=headers)
    if response.status_code == 201:
        print("‚úÖ Jenkins Job Triggered!")
    else:
        print(f"‚ùå Jenkins API Error: {response.status_code}")

# ------------------ EXECUTE ALL FUNCTIONS ------------------
if __name__ == "__main__":
    get_request()
    post_request()
    asyncio.run(async_get())
    trigger_jenkins()
üìå What This Covers:
‚úÖ GET API Request ‚Üí Fetches data from GitHub
‚úÖ POST API Request ‚Üí Creates a test post
‚úÖ Async GET Request ‚Üí Fetches API data asynchronously
‚úÖ Trigger Jenkins Job ‚Üí Starts a Jenkins build
