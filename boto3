import boto3

# üîπ 1Ô∏è‚É£ S3 Operations: Upload, Download, List Files
s3 = boto3.client('s3')
bucket_name = "my-bucket"

# Upload a file to S3
s3.upload_file("local_file.txt", bucket_name, "s3_file.txt")
print("‚úÖ File uploaded to S3!")

# Download a file from S3
s3.download_file(bucket_name, "s3_file.txt", "downloaded_file.txt")
print("‚úÖ File downloaded from S3!")

# List all files in the S3 bucket
response = s3.list_objects_v2(Bucket=bucket_name)
print("‚úÖ S3 Files:")
for obj in response.get('Contents', []):
    print(obj['Key'])

# üîπ 2Ô∏è‚É£ EC2 Operations: Start, Stop, List Instances
ec2 = boto3.client('ec2')

# Start an EC2 instance
instance_id = "i-0123456789abcdef0"
ec2.start_instances(InstanceIds=[instance_id])
print(f"‚úÖ EC2 Instance {instance_id} started!")

# Get running EC2 instances
instances = ec2.describe_instances()
print("\n‚úÖ Running EC2 Instances:")
for reservation in instances['Reservations']:
    for instance in reservation['Instances']:
        print(f"Instance ID: {instance['InstanceId']}, State: {instance['State']['Name']}")

# üîπ 3Ô∏è‚É£ DynamoDB Operations: Create Table, Insert Item, Fetch Item
dynamodb = boto3.resource('dynamodb')

# Create a DynamoDB table (if not exists)
table_name = "Users"
try:
    table = dynamodb.create_table(
        TableName=table_name,
        KeySchema=[{'AttributeName': 'UserID', 'KeyType': 'HASH'}],
        AttributeDefinitions=[{'AttributeName': 'UserID', 'AttributeType': 'S'}],
        ProvisionedThroughput={'ReadCapacityUnits': 1, 'WriteCapacityUnits': 1}
    )
    table.wait_until_exists()
    print("‚úÖ DynamoDB Table created!")
except Exception as e:
    print("‚ÑπÔ∏è Table may already exist.")

# Insert an item into DynamoDB
table = dynamodb.Table(table_name)
table.put_item(Item={'UserID': '123', 'Name': 'Alice', 'Age': 25})
print("‚úÖ User added to DynamoDB!")

# Fetch an item from DynamoDB
response = table.get_item(Key={'UserID': '123'})
print("\n‚úÖ DynamoDB User Data:", response.get('Item', {}))
