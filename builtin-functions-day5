Basic build-in methods:

string = "Hello"
my_list = [1, 2, 3, 4]
my_tuple = (10, 20, 30)
print(len(string))  # Output: 5
print(len(my_list))  # Output: 4
print(len(my_tuple))  # Output: 3

numbers = [3, 7, 1, 9, 4]
print(max(numbers))  # Output: 9
print(min(numbers))  # Output: 1

numbers = [3, 1, 4, 1, 5]
print(sorted(numbers))  # Output: [1, 1, 3, 4, 5]
print(sorted(numbers, reverse=True))  # Output: [5, 4, 3, 1, 1]


number = -15
print(abs(number))  # Output: 15

pi = 3.14159
print(round(pi, 2))  # Output: 3.14

numbers = [2, 4, 6, 8]
print(all(num % 2 == 0 for num in numbers))  # Output: True

fruits = ["apple", "banana", "cherry"]
for index, fruit in enumerate(fruits):
    print(f"{index}: {fruit}")
# Output:
# 0: apple
# 1: banana
# 2: cherry

names = ["Alice", "Bob", "Charlie"]
scores = [85, 92, 78]
result = zip(names, scores)
print(list(result))  # Output: [('Alice', 85), ('Bob', 92), ('Charlie', 78)]

numbers = [1, 2, 3, 4, 5, 6]
even_numbers = filter(lambda x: x % 2 == 0, numbers)
print(list(even_numbers))  # Output: [2, 4, 6]

numbers = [3, 1, 4, 1, 5]
print(sorted(numbers))  # Output: [1, 1, 3, 4, 5]
print(sorted(numbers, reverse=True))  # Output: [5, 4, 3, 1, 1]

text = "Python"
print(text.upper())  # Output: PYTHON
print(text.lower())  # Output: python

text = "python programming"
print(text.capitalize())  # Output: Python programming

text = "hello world"
print(text.startswith("hello"))  # Output: True
print(text.endswith("world"))    # Output: True

sentence = "Python is fun"
words = sentence.split()  # ['Python', 'is', 'fun']
print(words)
print("-".join(words))  # Output: Python-is-fun

numbers = [1, 2, 3]
squares = map(lambda x: x**2, numbers)
print(list(squares))  # Output: [1, 4, 9]


File Handling
open(): Read a file.
with open("example.txt", "r") as file:
    print(file.read())

write(): Write to a file.
with open("example.txt", "w") as file:
    file.write("Hello, world!")

# Open the file in append mode
with open('example.txt', 'a') as file:
    # Write data to the file
    file.write("This is a new line of text.\n")

close(): Ensure a file is closed.
file = open("example.txt", "r")
print(file.read())
file.close()




